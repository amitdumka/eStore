@model IEnumerable<eStore.Shared.Models.Accounts.Expenses.RentedLocation>

@{
    ViewData["Title"] = "Index";
    var host = "https://localhost:44335/";
    var uri = host + "api/RentedLocations";
    var activityName = "RentedLocation";
}


<table class="table" id="dtRentedLocation">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.PlaceName)
            </th>
            @*<th>
            @Html.DisplayNameFor(model => model.Address)
        </th>*@
            <th>
                @Html.DisplayNameFor(model => model.OnDate)
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.VacatedDate)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OwnerName)
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.MobileNo)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.RentAmount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AdvanceAmount)
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.IsRented)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RentType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Store)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsReadOnly)
            </th>*@
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.PlaceName)
                </td>
                @*<td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.OnDate)
                </td>
                @*<td>
                    @Html.DisplayFor(modelItem => item.VacatedDate)
                </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                @*<td>
                    @Html.DisplayFor(modelItem => item.OwnerName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MobileNo)
                </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.RentAmount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AdvanceAmount)
                </td>
                @*<td>
                    @Html.DisplayFor(modelItem => item.IsRented)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RentType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Store.StoreId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsReadOnly)
                </td>*@
                <td>
                    <a asp-action="Edit" asp-route-id="@item.RentedLocationId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.RentedLocationId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.RentedLocationId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<partial name="_OnlyModalPopUp" />
@section Scripts{
    <script src="~/js/curdjs.js"></script>
    <script>
        cardTableInit("dtRentedLocation", "Rented Location", "RentedLocations");
         function deleteM(id) {
             deleteModal('@activityName', '@uri', id);
            // alert(id);
             return false;
        }
    </script>
}
